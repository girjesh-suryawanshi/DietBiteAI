# Docker Compose version 3.8 removed as it's obsolete

services:
  # Main MyMealify application
  mymealify-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY}
        VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID}
        VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID}
    container_name: mymealify-app
    restart: unless-stopped
    ports:
      - "3002:5000"  # MyMealify app on port 3002 (avoiding conflict with existing app)
    environment:
      - NODE_ENV=production
      - PORT=5000
      # These will be set via .env file
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./logs:/app/logs
      - ./server/temp:/app/server/temp
    networks:
      - mymealify-network
    depends_on:
      - redis
      - postgres
    # Using nginx for reverse proxy instead of Traefik

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: mymealify-redis
    restart: unless-stopped
    ports:
      - "6380:6379"  # Use port 6380 to avoid Redis conflicts
    volumes:
      - redis-data:/data
    networks:
      - mymealify-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: mymealify-nginx
    restart: unless-stopped
    ports:
      - "8080:80"   # Use port 8080 instead of 80
      - "8443:443"  # Use port 8443 instead of 443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - mymealify-network
    depends_on:
      - mymealify-app

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: mymealify-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-mymealify}
      POSTGRES_USER: ${DB_USER:-mymealify_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"  # Use port 5433 to avoid PostgreSQL conflicts
    networks:
      - mymealify-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mymealify_user} -d ${DB_NAME:-mymealify}"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mymealify-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: